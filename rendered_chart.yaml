---
# Source: ghost/charts/mysql/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ghostapp-mysql
  namespace: "default"
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.10.9
    app.kubernetes.io/instance: ghostapp
    app.kubernetes.io/managed-by: Helm
  annotations:
automountServiceAccountToken: true
secrets:
  - name: ghostapp-mysql
---
# Source: ghost/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ghostapp
  namespace: "default"
  labels:
    app.kubernetes.io/name: ghost
    helm.sh/chart: ghost-19.3.31
    app.kubernetes.io/instance: ghostapp
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ghost
  annotations:
automountServiceAccountToken: true
---
# Source: ghost/charts/mysql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ghostapp-mysql
  namespace: "default"
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.10.9
    app.kubernetes.io/instance: ghostapp
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mysql-root-password: "RXBKSm1rUXQ1NQ=="
  mysql-password: "bUU4WVVjUkprMQ=="
---
# Source: ghost/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ghostapp
  namespace: "default"
  labels:
    app.kubernetes.io/name: ghost
    helm.sh/chart: ghost-19.3.31
    app.kubernetes.io/instance: ghostapp
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  ghost-password: "TzBiWk1RYmY3Ug=="
---
# Source: ghost/charts/mysql/templates/primary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ghostapp-mysql
  namespace: "default"
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.10.9
    app.kubernetes.io/instance: ghostapp
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  my.cnf: |-
    [mysqld]
    default_authentication_plugin=mysql_native_password
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mysql
    plugin_dir=/opt/bitnami/mysql/lib/plugin
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    datadir=/bitnami/mysql/data
    tmpdir=/opt/bitnami/mysql/tmp
    max_allowed_packet=16M
    bind-address=*
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
    log-error=/opt/bitnami/mysql/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    slow_query_log=0
    long_query_time=10.0
    
    [client]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mysql/lib/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
---
# Source: ghost/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: ghostapp
  namespace: "default"
  labels:
    app.kubernetes.io/name: ghost
    helm.sh/chart: ghost-19.3.31
    app.kubernetes.io/instance: ghostapp
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ghost
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: ghost/charts/mysql/templates/primary/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: ghostapp-mysql-headless
  namespace: "default"
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.10.9
    app.kubernetes.io/instance: ghostapp
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: mysql
      port: 3306
      targetPort: mysql
  selector: 
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: ghostapp
    app.kubernetes.io/component: primary
---
# Source: ghost/charts/mysql/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: ghostapp-mysql
  namespace: "default"
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.10.9
    app.kubernetes.io/instance: ghostapp
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector: 
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: ghostapp
    app.kubernetes.io/component: primary
---
# Source: ghost/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: ghostapp
  namespace: "default"
  labels:
    app.kubernetes.io/name: ghost
    helm.sh/chart: ghost-19.3.31
    app.kubernetes.io/instance: ghostapp
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ghost
spec:
  type: LoadBalancer
  externalTrafficPolicy: "Cluster"
  sessionAffinity: None
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/name: ghost
    app.kubernetes.io/instance: ghostapp
    app.kubernetes.io/component: ghost
---
# Source: ghost/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ghostapp
  namespace: "default"
  labels:
    app.kubernetes.io/name: ghost
    helm.sh/chart: ghost-19.3.31
    app.kubernetes.io/instance: ghostapp
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ghost
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ghost
      app.kubernetes.io/instance: ghostapp
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ghost
        helm.sh/chart: ghost-19.3.31
        app.kubernetes.io/instance: ghostapp
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: ghost
      annotations:
        checksum/secrets: d107ac58e66bd5d3ca66ddb7c0951c57838d6039e460bf3f71fe0324bfe5073a
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: ghost
                    app.kubernetes.io/instance: ghostapp
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      serviceAccountName: ghostapp
      securityContext:
        fsGroup: 1001
      containers:
        - name: ghostapp
          image: docker.io/bitnami/ghost:5.57.0-debian-11-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: GHOST_DATABASE_HOST
              value: "ghostapp-mysql"
            - name: GHOST_DATABASE_PORT_NUMBER
              value: "3306"
            - name: GHOST_DATABASE_NAME
              value: "bitnami_ghost"
            - name: GHOST_DATABASE_USER
              value: "bn_ghost"
            - name: GHOST_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ghostapp-mysql
                  key: mysql-password
            - name: GHOST_HOST
              value: "a2598c666af254e2780cd726b4a51f57-704288651.ca-central-1.elb.amazonaws.com/"
            - name: GHOST_PORT_NUMBER
              value: "2368"
            - name: GHOST_USERNAME
              value: "user"
            - name: GHOST_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ghostapp
                  key: ghost-password
            - name: GHOST_EMAIL
              value: "user@example.com"
            - name: GHOST_BLOG_TITLE
              value: "User's Blog"
            - name: GHOST_ENABLE_HTTPS
              value: "no"
            - name: GHOST_EXTERNAL_HTTP_PORT_NUMBER
              value: "80"
            - name: GHOST_EXTERNAL_HTTPS_PORT_NUMBER
              value: "443"
            - name: GHOST_SKIP_BOOTSTRAP
              value: "no"
          ports:
            - name: http
              containerPort: 2368
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: "http"
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /
              port: "http"
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 6
            successThreshold: 1
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: ghost-data
              mountPath: /bitnami/ghost
      volumes:
        - name: ghost-data
          persistentVolumeClaim:
            claimName: ghostapp
---
# Source: ghost/charts/mysql/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ghostapp-mysql
  namespace: "default"
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.10.9
    app.kubernetes.io/instance: ghostapp
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  podManagementPolicy: ""
  selector:
    matchLabels: 
      app.kubernetes.io/name: mysql
      app.kubernetes.io/instance: ghostapp
      app.kubernetes.io/component: primary
  serviceName: ghostapp-mysql
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: a41c74797e9fbbe5d71c3cac7ed9e66b4807e121d3edc80479ac5182ebbfc44a
      labels:
        app.kubernetes.io/name: mysql
        helm.sh/chart: mysql-9.10.9
        app.kubernetes.io/instance: ghostapp
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
    spec:
      serviceAccountName: ghostapp-mysql
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mysql
                    app.kubernetes.io/instance: ghostapp
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
        - name: mysql
          image: docker.io/bitnami/mysql:8.0.34-debian-11-r8
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ghostapp-mysql
                  key: mysql-root-password
            - name: MYSQL_USER
              value: "bn_ghost"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ghostapp-mysql
                  key: mysql-password
            - name: MYSQL_DATABASE
              value: "bitnami_ghost"
          envFrom:
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          startupProbe:
            failureThreshold: 10
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources: 
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mysql
            - name: config
              mountPath: /opt/bitnami/mysql/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: ghostapp-mysql
  volumeClaimTemplates:
    - metadata:
        name: data
        labels: 
          app.kubernetes.io/name: mysql
          app.kubernetes.io/instance: ghostapp
          app.kubernetes.io/component: primary
        annotations:
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"

